values_to = "value")
who2 |> pivot_longer(cols = !(country|year),
names = c("method", "sex", "age"),
names_sep = "_",
values_to = "count")
who2 |> pivot_longer(cols = !(country|year),
names_to = c("method", "sex", "age"),
names_sep = "_",
values_to = "count")
who2 |> pivot_longer(cols = !(country|year),
names_to = c("method", "sex", "age"),
names_sep = "_",
values_to = "count") |>
summarise (n = n())
household |> pivot_longer(cols = !family,
names_to = c(".value", "child"),
names_sep = "_",
values_drop_na = T)
cms_patient_experience |> pivot_wider(names_from = measure_cd,
values_from = prf_rate)
cms_patient_experience |> pivot_wider(names_from = measure_cd,
values_from = prf_rate,
id_cols = starts_with("org"))
cms_patient_experience
df2 <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"B",        "bp1",    140,
"B",        "bp2",    115,
"A",        "bp2",    120,
"A",        "bp3",    105)
df2 <- tribble(
~id, ~measurement, ~value,
"A",        "bp1",    100,
"B",        "bp1",    140,
"B",        "bp2",    115,
"A",        "bp2",    120,
"A",        "bp3",    105)
df2 |> pivot_wider(names_from = measurement,
values_from = value,
id_cols = id)
?pull()
library(tidyverse)
students <- read_csv("https://pos.it/r4ds-students-csv")
students
library(janitor)
students |> clean_names() |>
mutate(age = parse_number(age),
mealplan = as.factor(mealplan)) |>
glimpse()
students |> clean_names()
students |> clean_names() |>
mutate(age = parse_number(age),
meal_plan = as.factor(meal_plan)) |>
glimpse()
students <- read_csv("https://pos.it/r4ds-students-csv", na = c("N/A"))
students |> clean_names() |>
mutate(age = parse_number(if_else(age== "five", 5, age)),
meal_plan = as.factor(meal_plan)) |>
glimpse()
students |> clean_names() |>
mutate(age = parse_number(if_else(age == "five", "5", age)),
meal_plan = as.factor(meal_plan)) |>
glimpse()
students <- students |> clean_names() |>
mutate(age = parse_number(if_else(age == "five", "5", age)),
meal_plan = as.factor(meal_plan)) |>
glimpse()
read_csv("https://pos.it/r4ds-students-csv", na = c("N/A")) |>
clean_names()
students <- read_csv("https://pos.it/r4ds-students-csv", na = c("N/A")) |>
clean_names() |>
mutate(age = parse_number(if_else(age == "five", "5", age)),
meal_plan = as.factor(meal_plan))
View(students)
simple_csv <- "
x
10
.
20
30"
df <- read_csv(simple_csv, col_types = list(x = col_double()))
problems(df)
read_csv(simple_csv, na = c(".","-"))
simple_csv <- "
x
10
.
-
20
30"
read_csv(simple_csv, na = c(".","-"))
sales_files <- c(
"https://pos.it/r4ds-01-sales",
"https://pos.it/r4ds-02-sales",
"https://pos.it/r4ds-03-sales"
)
read_delim(sales_files, id = "file", delim = ",")
sales_dataset <- read_delim(sales_files, id = "file", delim = ",")
write_csv(students, "students.csv")
write_csv(students, "students.csv")
students_reentered <- read_csv("students.csv")
write_rds(students, "students.rds")
students3 <- read_rds("students.rds")
View(students3)
library(arrow)
arrow::write_parquet(students, "students.parquet")
students4 <- arrow::read_parquet("students.parquet")
View(students4)
lapply(c("tidyverse", "janitor"), library, character.only = T)
mtcars |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point
mtcars |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point()
mpg |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point()
mpg |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point(shape = 16)
mpg |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point(shape = 17)
mpg |> ggplot(aes(x = displ, y = hwy, colour = class))+
geom_point(shape = 17, size = 2, alpha = 0.5)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(colour = "pink", shape = 17)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(colour = "hotpink", shape = 17)
?stroke()
?geom_point
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(stroke = T)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(stroke = F)
mpg |> ggplot(aes(x = displ, y = hwy))+ #
geom_point(shape = 5, stroke = F)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(colour = displ < 4)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(aes(colour = displ < 4))
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_smooth(aes(linetype = class, colour = class))
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_smooth(aes(linetype = drv, colour = drv))
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_smooth(aes(linetype = drv, colour = drv))+
geom_smooth(colour = "black")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2-seater"),
colour = red, shape = "circle open" )
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2-seater"),
colour = "red", shape = "circle open" )
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2-seater"),
colour = "red", shape = "circle open")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2seater"),
colour = "red", shape = "circle open")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2seater"),
colour = "red")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red")+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red", size = 3, shape = "circle open")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red")+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red", size = 5, shape = "circle open")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red", stroke = T)+
geom_point(data = mpg |> filter(class == "2seater"), #This works well to call out points/groups of interest
colour = "red", size = 5, shape = "circle open")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
facet_wrap(~drv)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
facet_grid(drv ~ cyl)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
facet_grid(drv ~ cyl, scales = free)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
facet_grid(drv ~ cyl, scales = "free")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
facet_grid(drv ~ .)
diamonds |> ggplot(aes(x = cut))+
geom_bar()
diamonds |> ggplot(aes(x = cut))+
geom_bar(stat = "prop")
diamonds |> ggplot(aes(x = cut, y = after_stat("prop")))+
geom_bar()
diamonds |> ggplot(aes(x = cut, y = after_stat("prop"), group = 1))+
geom_bar()
diamonds |> ggplot(aes(x = cut, y = after_stat(prop), group = 1))+
geom_bar()
diamonds |> ggplot()+
stat_summary(aes(x = cut, y = depth),
fun.min = min,
fun.max = max,
fun = median)
?stat_summary
diamonds |> ggplot(aes(x = cut, y = depth))+
geom_pointrange()
diamonds |> ggplot(aes(x = cut, y = depth))+
geom_pointrange(ymin = min, ymax = max)
>geom_pointrange
?geom_pointrange
diamonds |> ggplot(aes(x = cut, y = depth))+
geom_pointrange(aes(ymin = min, ymax = max))
diamonds |> ggplot(aes(x = cut, y = depth))+
geom_pointrange(aes(ymin = lower, ymax = upper))
q()
lapply(c("tidyverse", "janitor"), library, character.only = T)
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() +
#coord_fixed()
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline() #+
ggplot(data = mpg, mapping = aes(x = cty, y = hwy)) +
geom_point() +
geom_abline()
mpg |> ggplot(aes(x = drv, fill = class))+
geom_bar(alpha = 0.8)
mpg |> ggplot(aes(x = drv, fill = class))+
geom_bar(alpha = 0.8, position = "dodge")+
labs(title = "A grouped bar chart", subtitle = "uses position = dodge")
mpg |> ggplot(aes(x = drv, fill = class))+
geom_bar(alpha = 0.8, position = "fill")+
labs(title = "A proportion bar chart",
subtitle = "uses position = fill")
mpg |> ggplot(aes(x = drv, fill = class))+
geom_bar(alpha = 0.8)+
coord_polar()
diamonds |> ggplot(aes(x = cut))+
geom_bar(fill = "gold")
diamonds |> ggplot(aes(x = cut))+
geom_histogram(fill = "gold")
diamonds |> ggplot(aes(x = carat))+
geom_histogram(fill = "gold")
diamonds |> ggplot(aes(x = carat))+
geom_histogram(fill = "gold", binwidth = 0.5)
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) |>
geom_histogram()
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_histogram()
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_histogram(binwidth = 0.5)
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_histogram(binwidth = 0.1)
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_histogram(binwidth = 0.01)
ggplot(diamonds, aes(x = y)) +
geom_histogram(binwidth = 0.5) +
coord_cartesian(ylim = c(0, 50)) # lets you trim the axes to view only what you want
diamonds |> ggplot(aes(x = carat))+
geom_histogram(fill = "gold", binwidth = 0.5)
lapply(c("tidyverse", "janitor"), library, character.only = T)
diamonds |> ggplot(aes(x = carat))+
geom_histogram(fill = "gold", binwidth = 0.5)
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat)) +
geom_histogram(binwidth = 0.01)
diamonds |> ggplot(aes(x = price))+
geom_histogram(fill = "gold", colour = "black")
diamonds |> slice_max(price, n = 5)
diamonds |> ggplot(aes(x = price))+
geom_histogram(fill = "gold", colour = "black", binwidth = 500)
diamonds |> ggplot(aes(x = price))+
geom_histogram(fill = "gold", colour = "black", binwidth = 1000)
diamonds |> ggplot(aes(x = price))+
geom_histogram(fill = "gold", colour = "black", binwidth = 2000)
diamonds |> filter(carat == 0.99|carat == 1) |>
summarise(n = n()) |>
ggplot(aes(x = carat, y = n))+
geom_bar(colour = "blue")
diamonds |> filter(carat == 0.99|carat == 1) |>
summarise(n = n(),.by = carat) |>
ggplot(aes(x = carat, y = n))+
geom_bar(colour = "blue")
diamonds |> filter(carat == 0.99|carat == 1) |>
ggplot(aes(x = carat))+
geom_bar(colour = "blue")
diamonds |> filter(carat == 0.99|carat == 1) |>
ggplot(aes(x = carat))+
geom_bar(fill = "red", colour = black)
diamonds |> filter(carat == 0.99|carat == 1) |>
ggplot(aes(x = carat))+
geom_bar(fill = "red", colour = "black"")
diamonds |> filter(carat == 0.99|carat == 1) |>
ggplot(aes(x = carat))+
geom_bar(fill = "red", colour = "black")
diamonds |> ggplot(aes(x = karat))+
geom_histogram()
diamonds |> ggplot(aes(x = carat))+
geom_histogram()
diamonds |> ggplot(aes(x = carat))+
geom_histogram()+
coord_cartesian(xlim = c(0, 3.5))
diamonds |> ggplot(aes(x = carat))+
geom_histogram()+
coord_cartesian(xlim = c(0, 3.25))
diamonds |> ggplot(aes(x = carat))+
geom_histogram(binwidth = 0.01)+
coord_cartesian(xlim = c(0, 3.25))
?xlim
diamonds |> ggplot(aes(x = carat))+
geom_histogram(binwidth = 0.01)+
xlim(0,3.25)
diamonds |> ggplot(aes(x = carat))+
geom_histogram(binwidth = 0.01)+
ylim(0,1000)
diamonds |> ggplot(aes(x = carat))+
geom_histogram(binwidth = 0.01)+
coord_cartesian(ylim = c(0,1000))
diamonds |> ggplot(aes(x = price))+
geom_freqpoly(aes(colour = cut), linewidth = 0.75)
diamonds |> ggplot(aes(x = price, y = after_stat(density)))+
geom_freqpoly(aes(colour = cut), linewidth = 0.75)
diamonds |> ggplot(aes(x = cut, , y = colour))+
geom_count()
diamonds |> ggplot(aes(x = cut, y = color))+
geom_count()
diamonds |> count(color, cut) |>
ggplot(aes(x = color, y = cut))+
geom_tile(aes(fill = n))
diamonds |> count(color, cut) |>
ggplot(aes(x = cut, y = color))+
geom_tile(aes(fill = n))
diamonds |> ggplot(aes(x = carat, y = price))+
geom_point()
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat, y = price))+
geom_point()
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat, y = price))+
geom_point(alpha = 0.01)
install.packages("hexbin")
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat, y = price))+
geom_bin2d()
library(hexbin)
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat, y = price))+
geom_hex()
diamonds |> filter(carat < 3) |>
ggplot(aes(x = carat, y = price))+
geom_boxplot(aes(group = cut_width(carat, 0.1))
)
q()
lapply(c("tidyverse", "janitor"), library, character.only = T)
lapply(c("tidyverse", "janitor", "scales", "patchwork", "ggrepl"),
library, character.only = T)
lapply(c("tidyverse", "janitor", "scales", "patchwork", "ggrepel"),
library, character.only = T)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point(aes(colour = class))+
geom_smooth(se = F)+
labs( x = "Engine displacement (L)",
y = "Highway fuel economy (mpg)",
color = "Car type",
title = "Fuel efficiency generally decreases with engine size",
subtitle = "Two seaters (sports cars) are an exception because of their light weight",
caption = "Data from fueleconomy.gov")
df <- tibble(x = 1:10,y = cumsum(x^2))
df |> ggplot(aes(x = x, y = y))+
geom_point()+
labs(x = quote(x[i]),
y = quote(sum(x[i] ^ 2, i == 1, n )))
df |> ggplot(aes(x = x, y = y))+
geom_point()+
geom_line()+
labs(x = quote(x[i]),
y = quote(sum(x[i] ^ 2, i == 1, n )))
?mpg
mpg |> ggplot(aes(x = cty, y = hwy))+
geom_point(aes(colour = drv, shape = drv))+
labs(x = "City MPG", y = "Highway MPG",
colour = "Drive Train")
mpg |> ggplot(aes(x = cty, y = hwy))+
geom_point(aes(colour = drv, shape = drv))+
labs(x = "City MPG", y = "Highway MPG",
colour = "Drive Train", shape = "Drive Train")
label_info <- mpg |>
group_by(drv) |>
arrange(desc(displ)) |>
slice_head(n = 1) |>
mutate( drive_type = case_when(
drv == "f" ~ "Front-Wheel Drive",
drv == "r" ~ "Rear-Wheel Drive",
drv == "4" ~ "4-Wheel Drive"
)) |>
select(drv, hwy, displ,drive_type)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_smooth(se = F)+
geom_text(data = label_info)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
geom_smooth(se = F)+
geom_text(data = label_info,
aes(x = displ, y = hwy, label = drive_type))
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_smooth(se = F)+
geom_text(data = label_info,
aes(x = displ, y = hwy, label = drive_type))
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_smooth(se = F)+
geom_text(data = label_info,
aes(x = displ, y = hwy, label = drive_type),
hjust = "right", vjust = "bottom")
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_smooth(se = F)+
geom_label_repel(data = label_info,
aes(x = displ, y = hwy, label = drive_type),
nudge_y = 2)
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_smooth(se = F)+
geom_label_repel(data = label_info,
aes(x = displ, y = hwy, label = drive_type),
nudge_y = 5)
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_smooth(se = F)+
geom_label_repel(data = label_info,
aes(x = displ, y = hwy, label = drive_type),
nudge_y = 1)
trend_text <- "This is sample trend text. Big engine -> lower economy" |> str_wrap(30)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
annotate(geom = "label", x = 3.5, y = 8,
label = trend_text)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
annotate(geom = "label", x = 3.5, y = 38,
label = trend_text)
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
annotate(geom = "label", x = 3.5, y = 38,
label = trend_text, colour = "red")
mpg |> ggplot(aes(x = displ, y = hwy))+
geom_point()+
annotate(geom = "label", x = 5, y = 38,
label = trend_text, colour = "red")
lapply(c("tidyverse", "janitor", "scales", "patchwork", "ggrepel"),
library, character.only = T)
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
geom_text(data = "Position 1", hjust = 10)
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
scale_y_continuous(breaks = seq(1,50,10))
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
scale_y_continuous(breaks = seq(1,50, by =10))
#Playing with scales
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
scale_y_continuous(breaks = seq(1,50, by = 5))
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
scale_y_continuous(breaks = seq(10,50, by = 5))
geom_label_repel(data = label_info,
aes(x = displ, y = hwy, label = drive_type),
nudge_y = 1)
mpg |> ggplot(aes(x = displ, y = hwy, colour = drv))+
geom_point()+
scale_y_continuous(labels = NULL)
diamonds |> ggplot(aes(x = price, y = cut)) +
geom_boxplot()+
scale_x_continuous(labels = dollar_format(scale = 1/1000, suffix = "K"))
diamonds |> ggplot(aes(x = price, y = cut)) +
geom_boxplot()+
scale_x_continuous(labels = dollar_format(scale = 1/1000, suffix = "K"),
breaks = seq(1000, 25000, by  = 6000)) #Takes new scale
diamonds |> ggplot(aes(x = cut, fill = clarity))+
geom_bar(position = "fill")+
scale_y_continuous(name = "Percentage", labels = percent_format())
diamonds |> ggplot(aes(x = cut, fill = clarity))+
geom_bar(position = "fill")+
scale_y_continuous(name = "Percentage...xxx", labels = percent_format())
